<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:f="http://xmlns.jcp.org/jsf/core">
    <h:head>
            <title>Home Page</title>
    </h:head>
    <h:body style="background-color: #F5F5F5">


        <h:form id="formcentral"> 
            <p:growl id="growl" showDetail="true"/>       

            <p:layout style="min-height: 910px;min-width: 450px" styleClass="West" >
                <p:layoutUnit position="west" >
                    <h:panelGrid columns="1" style="border-width: 0px" >
                        <f:facet name="header">
                            <h:graphicImage  width="300" value="#{imageBean.UDemoImage}"  />
                        </f:facet>
                        <h:outputText value="Welcome: #{loginBean.name}" style="border-width: 0px"/>
                        <div style="height: 50px"/>
                        <p:commandButton value="Logout" id="logout" action="#{loginBean.logout()}" style="width: 100%"/>
                    </h:panelGrid>

                </p:layoutUnit>
                <p:layoutUnit position="center" id="center" style="width: auto;height: auto" styleClass="Center" >



                    <h:panelGrid id="principalgrid" columnClasses="value" style ="margin : 0px auto;width: 100%">
                        <p:schedule id="schedule" value="#{scheduleBean.model}" style="width: 70%;;margin: 0px auto;" widgetVar="myschedule" timeZone="GMT+2">
                            <p:ajax event="dateSelect"  listener="#{eventBean.onDateSelect}" update="eventDetails" oncomplete="PF('eventDialog').show();" />
                            <p:ajax event="eventSelect" listener="#{eventBean.onEventSelect}" update="eventDetails" oncomplete="PF('eventDialog').show();" />
                        </p:schedule>
                    </h:panelGrid>


                    <p:dialog showEffect="fade" hideEffect="fade" header="Settings" widgetVar="dlg-settings" id="dialogsettings"  style="width: auto;height: auto" >
                        <h:panelGrid id="panelsetting" cellpadding="1" columns="1" style=" background-color: transparent" >              
                            <p:selectManyButton style="background-color: transparent">
                                <p:commandButton value="Export" id="export"  action="#{exportBean.export()}" update="growl" oncomplete="PF('dlg-settings').hide()">     
                                </p:commandButton>
                                <p:commandButton value="Import" id="import" action="#{importBean.imports()}" actionListener="#{scheduleBean.loadCalendar()}" update="schedule,growl" oncomplete="PF('myschedule').update();PF('dlg-settings').hide()" />
                                <p:selectBooleanCheckbox value="#{setCalendarBean.status}">
                                    <p:ajax listener="#{setCalendarBean.saveDecision()}" update="panelsetting"  />
                                </p:selectBooleanCheckbox>
                            </p:selectManyButton>
                        </h:panelGrid>
                    </p:dialog>

                    <p:dialog header="Users"  showEffect="fade" hideEffect="fade"  widgetVar="dlg-users">
                        <p:selectOneMenu  value="#{publicScheduleBean.username}" 
                                          filter="true" filterMatchMode="contains"  >
                            <f:selectItems value="#{publicScheduleBean.users}" />                             
                        </p:selectOneMenu>
                        <p:commandButton value="Go" id="goToCalendar" actionListener="#{publicScheduleBean.loadCalendar()}" update="panelpubcal" process="@parent" oncomplete="PF('dlg-pubcal').show();PF('dlg-users').hide()" />
                    </p:dialog>

                    <p:dialog header="Public Calendar"   showEffect="fade" hideEffect="fade"  id="dialogpubcal" widgetVar="dlg-pubcal">
                        <h:panelGrid id="panelpubcal" columnClasses="value" style ="margin : 0px auto">
                            <p:schedule id="pubcal" value="#{publicScheduleBean.eventModel}"  widgetVar="publicCalendar" timeZone="GMT+2">
                                <p:ajax event="eventSelect"  listener="#{publicEventBean.onEventSelect}" update="eventDetailsPublic" oncomplete="PF('eventDialogPublic').show();" />
                            </p:schedule>
                        </h:panelGrid>
                    </p:dialog>


                    

                    

                    <p:dialog widgetVar="eventDialog" header="Event Details"  showEffect="fade" hideEffect="fade" >
                        <h:panelGrid  id="eventDetails" columns="2">

                            <h:outputLabel for="title" value="Title:" />
                            <p:inputText disabled="#{!eventBean.isOwnEvent}" id="title"  value="#{eventBean.beanEvent.title}" required="#{eventBean.required}" requiredMessage="Insert Title"  >
                            </p:inputText>

                            <p:outputLabel for="startDate" value="From:" />
                            <p:calendar  disabled="#{!eventBean.isOwnEvent}" id="startDate" value="#{eventBean.startDate}" pattern="MM/dd/yyyy HH:mm:ss" required="#{eventBean.required}" requiredMessage="Insert Date"    />

                            <p:outputLabel for="endDate" value="To:" />
                            <p:calendar  disabled="#{!eventBean.isOwnEvent}" id="endDate" value="#{eventBean.endDate}" pattern="MM/dd/yyyy HH:mm:ss" required="#{eventBean.required}" requiredMessage="Insert Date"   />

                            <h:outputLabel for="place" value="Place:" />
                            <p:inputText  disabled="#{!eventBean.isOwnEvent}" id="place" value="#{eventBean.beanEvent.place}"  required="#{eventBean.required}" requiredMessage="Insert Place"  />

                            <p:outputLabel for="outdoor" value="In/Out"  />
                            <p:selectOneRadio disabled="#{!eventBean.isOwnEvent}" id="outdoor" value="#{eventBean.beanEvent.outdoor}" required="#{eventBean.required}" requiredMessage="Insert Out/in"   >
                                <f:selectItem id="outdoorno" itemLabel="Indoor" itemValue="false" />
                                <f:selectItem id="outdooryes" itemLabel="Outdoor" itemValue="true" />
                            </p:selectOneRadio>

                            <p:outputLabel for="public" value="In/Out"  />
                            <p:selectOneRadio  disabled="#{!eventBean.isOwnEvent}" id="public" value="#{eventBean.beanEvent.publicEvent}" required="#{eventBean.required}" requiredMessage="Insert Public/Private"   >
                                <f:selectItem itemLabel="Public" itemValue="true"/>
                                <f:selectItem itemLabel="Private" itemValue="false" />
                            </p:selectOneRadio>

                            <p:outputLabel for="description" value="Description:" />
                            <p:inputTextarea id="description" disabled="#{!eventBean.isOwnEvent}" value="#{eventBean.beanEvent.description}" rows="6" cols="33" required="#{eventBean.required}" requiredMessage="Insert Desctiption"   />

                            

                            <p:outputLabel for="invites" value="Invites:" />
                            <p:selectManyMenu  disabled="#{!eventBean.isOwnEvent}" id="invites" value="#{eventBean.toInviteUsers}" 
                                               filter="true" filterMatchMode="contains" showCheckbox="true" >
                                <f:selectItems value="#{eventBean.listUser()}" var="listUser" itemLabel="#{listUser}" itemValue="#{listUser}" />
                            </p:selectManyMenu>

                            <p:commandButton id="declineButton" value="Decline" action="#{eventBean.decline()}" actionListener="#{scheduleBean.loadCalendar()}" rendered="#{eventBean.canDecline}" update="growl,:formcentral" oncomplete="PF('myschedule').update();PF('eventDialog').hide();" />
                            <p:commandButton id="modifyButton" value="Modify" actionListener="#{eventBean.modify()}" action="#{scheduleBean.loadCalendar()}" rendered="#{!eventBean.creating}" update="growl,:formcentral"  disabled="#{!eventBean.isOwnEvent}" oncomplete="PF('myschedule').update();PF('eventDialog').hide();"  />
                            <p:commandButton id="addButton" value="Save" actionListener="#{eventBean.create()}" action="#{scheduleBean.loadCalendar()}"  rendered="#{eventBean.creating}" update="growl,:formcentral" disabled="#{!eventBean.isOwnEvent}" oncomplete="PF('myschedule').update();PF('eventDialog').hide();" />  
                            <p:commandButton id="deleteButton" value="Delete" actionListener="#{eventBean.cancel()}" action="#{scheduleBean.loadCalendar()}" rendered="#{!eventBean.creating}" update="growl,:formcentral" disabled="#{!eventBean.isOwnEvent}" oncomplete="PF('myschedule').update();PF('eventDialog').hide();" />  

                        </h:panelGrid>
     
                    </p:dialog>

                    <p:dialog widgetVar="eventDialogPublic" showEffect="fade" hideEffect="fade"  header="Event Details" >
                        <h:panelGrid id="eventDetailsPublic" columns="2">
                            <h:outputLabel for="titlePublic" value="Title:" />
                            <p:outputLabel id="titlePublic" value="#{publicEventBean.event.title}" />

                            <p:outputLabel for="startDatePublic" value="From:" />
                            <p:outputLabel id="startDatePublic" value="#{publicEventBean.startDate}"/>

                            <p:outputLabel for="endDatePublic" value="To:" />
                            <p:outputLabel id="endDatePublic" value="#{publicEventBean.endDate}"/>

                            <h:outputLabel for="placePublic" value="Place:" />
                            <p:outputLabel id="placePublic" value="#{publicEventBean.event.place.city}"/>

                            <h:outputLabel for="descriptionPublic" value="Description:" />
                            <p:outputLabel id="descriptionPublic" value="#{publicEventBean.event.description}"/>

                            <p:outputLabel for="outdoorPublic" value="In/Out"  />
                            <p:outputLabel id="outdoorPublic" value="#{publicEventBean.event.outdoor}"/>



                            <p:dataList id="invitationPublic" value="#{publicEventBean.invitated}" var="invit" type="ordered">
                                #{invit}
                            </p:dataList>
                        </h:panelGrid>
                    </p:dialog> 
                </p:layoutUnit>
            </p:layout>


            <p:dock position="bottom">  
                <p:menuitem  icon="https://calendarium.googlecode.com/git/MeteoCalendarium/src/main/resources/images/invitations.png" value="Invitations" id="invitations" action="#{eventBean.unload()}" oncomplete="PF('dlg-invitations').show();" process="@this" />
                <p:menuitem  icon="https://calendarium.googlecode.com/git/MeteoCalendarium/src/main/resources/images/users.png" value=" Users" id="utenti"  action="#{eventBean.unload()}" oncomplete="PF('dlg-users').show();" process="@this" />
                <p:menuitem  icon="https://calendarium.googlecode.com/git/MeteoCalendarium/src/main/resources/images/Settings.png" value="Settings" id="settings" action="#{eventBean.unload()}" oncomplete="PF('dlg-settings').show();" process="@this"  />                 
            </p:dock>  

        </h:form>

        <style type="text/css">
            .value {
                width: 900px;
            }

            .Center{

            }

            .ui-dock-bottom {
                width: 100%;
                bottom: 0px;
                position: absolute;
                left: 0px;
                background-color: transparent;

            }

            .ui-dock-container-bottom {
                border-width: 0px;
                position: fixed;
                height: 50px;
                padding-left: 50px;
                background-color: transparent;
            }
            a.ui-dock-item-bottom {
                display: block; 
                width: 200px;  
                bottom: 0px; 
                position: absolute;
                text-align: center;
                text-decoration: none;
                background-color: transparent;

            }
            .ui-dock-item-bottom span {
                display: none;
                padding-left: 50px;
            }
            .ui-dock-item-bottom img {
                border: none; 
                margin: 5px 10px 0px; 
                width: 100%; 
            }

            .West{

            }

            .West .ui-layout-unit-content{

                background-color: #F5F5F5;
            }
            .Center .ui-layout-unit-content{
                background-image:url('http://leverage.it/wp-content/uploads/2011/09/CutClouds.jpg'); 

            } 

            .ui-layout-content{
                overflow: auto; 
                padding: 0; 
                background-image:url('http://leverage.it/wp-content/uploads/2011/09/CutClouds.jpg'); 

            }
            .ui-layout-unit{
                border-width: 0;
                overflow: hidden;
                position: relative;
                padding: 0;
                margin: 0;
            }

            .ui-layout-center{      
            }

            .ClearNotWarned {

            }

            .ClearWarned {

            }

            .RainNotWarned {

            }

            .RainWarned {

            }

            .CloudsNotWarned {

            }

            .CloudsWarned {

            }

            .SnowNotWarned {

            }

            .SnowWarned {

            }

            .VariableNotWarned {

            }

            .VariableWarned {

            }
            .NoForecast {

            }

            .ClearWarned .fc-event-inner {             
                background-image: url('https://calendarium.googlecode.com/git/MeteoCalendarium/src/main/resources/images/sunWarning.jpg');
            }
            .ClearNotWarned .fc-event-inner {
                background-image: url('https://calendarium.googlecode.com/git/MeteoCalendarium/src/main/resources/images/sunNoWarning.jpg');
            }
            .RainWarned .fc-event-inner {             
                background-image: url('https://calendarium.googlecode.com/git/MeteoCalendarium/src/main/resources/images/RainWarning.jpg');
            }
            .RainNotWarned .fc-event-inner {
                background-image: url('https://calendarium.googlecode.com/git/MeteoCalendarium/src/main/resources/images/RainNoWarning.jpg');
            }
            .CloudsWarned .fc-event-inner {             
                background-image: url('https://calendarium.googlecode.com/git/MeteoCalendarium/src/main/resources/images/CloudsWarning.jpg');
            }
            .CloudsNotWarned .fc-event-inner {
                background-image: url('https://calendarium.googlecode.com/git/MeteoCalendarium/src/main/resources/images/CloudsNoWarning.jpg');
            }
            .SnowWarned .fc-event-inner {             
                background-image: url('https://calendarium.googlecode.com/git/MeteoCalendarium/src/main/resources/images/SnowWarning.jpg');
            }
            .SnowNotWarned .fc-event-inner {
                background-image: url('https://calendarium.googlecode.com/git/MeteoCalendarium/src/main/resources/images/SnowNoWarning.jpg');
            }
            .VariableWarned .fc-event-inner {             
                background-image: url('https://calendarium.googlecode.com/git/MeteoCalendarium/src/main/resources/images/VariableWarning.jpg');
            }
            .VariableNotWarned .fc-event-inner {
                background-image: url('https://calendarium.googlecode.com/git/MeteoCalendarium/src/main/resources/images/VariableNoWarning.jpg');
            }
            .NoForecast .fc-event-inner {
                background-image: url('https://calendarium.googlecode.com/git/MeteoCalendarium/src/main/resources/images/NoForecast.jpg');
            }

        </style>


    </h:body>
</html>

